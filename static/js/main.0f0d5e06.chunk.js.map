{"version":3,"sources":["components/Header/Header.js","components/LoginForm/LoginForm.js","components/BasicInfo/BasicInfo.js","components/Passenger/Passenger.js","components/PassengersList/PassengersList.js","components/Trip/Trip.js","components/TripsList/TripsList.js","components/PassengerCheckBox/PassengerCheckBox.js","components/AddTrip/AddTrip.js","components/AddPassenger/AddPassenger.js","components/CustomerDetailsPage/CustomerDetailsPage.js","containers/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","id","LoginForm","_ref","app","className","htmlFor","type","name","onClick","email","document","getElementById","value","password","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","data","token","localStorage","setItem","setState","alert","handleLogin","handleSaveCustomer","address","city","country","authorization","concat","window","location","reload","BasicInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","target","onNameChange","onAddressChange","onCityChange","onCountryChange","customer","state","_this$state","onChange","Component","handleDeletePassenger","passenger","passengerId","split","passengerRow","parentNode","removeChild","Passenger","title","firstName","surname","passportId","PassengersList","passengersList","onAddPassengerClick","passengersArray","map","components_Passenger_Passenger","key","passengerid","firstname","passportid","Trip","departureAirport","destinationAirport","departureTime","arrivalTime","passengers","join","trip","tripID","trip_id","tripRow","TripsList","tripsList","onAddTripClick","tripsArray","components_Trip_Trip","departure_airport","destination_airport","departure_time","arrival_time","PassengerCheckBox","onPassengerCheck","fullName","AddTrip","checked","push","splice","indexOf","onDepartureAirportChange","onDestinationAirportChange","onDepartureDateChange","departureDate","onDepartureTimeChange","onArrivalDateChange","arrivalDate","onArrivalTimeChange","handleAddTrip","newTrip","passengersCheckBoxArray","components_PassengerCheckBox_PassengerCheckBox","onCancelAddTripClick","AddPassenger","onTitleChange","onFirstNameChange","onSurnameChange","onPassportIdChange","handleAddPassenger","newPassenger","onCancelAddPassengerClick","CustomerDetailsPage","components_BasicInfo_BasicInfo","components_PassengersList_PassengersList","addPassengerWindow","components_AddPassenger_AddPassenger","components_TripsList_TripsList","trips","addTripWindow","components_AddTrip_AddTrip","App","componentDidMount","auth","components_Header_Header","components_LoginForm_LoginForm","components_CustomerDetailsPage_CustomerDetailsPage","Boolean","hostname","match","ReactDOM","render","src_containers_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f0d5e06.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>Customer Portal</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './LoginForm.css';\r\n\r\nconst handleLogin = (app) => {\r\n    const email = document.getElementById('emailField').value;\r\n    const password = document.getElementById('passwordField').value;\r\n\r\n    fetch('https://customerportalgb.herokuapp.com/signin', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            password\r\n        })\r\n    }).then(res => res.json())\r\n    .then(data => {\r\n        if(data.token) {\r\n            localStorage.setItem('token', data.token);\r\n            app.setState(data);\r\n        } else {\r\n            alert('Wrong Credentials!')\r\n        }\r\n    })\r\n}\r\n\r\nconst LoginForm = ( {app} ) => {\r\n\r\n    return (\r\n            <div id=\"loginForm\">\r\n                <div className=\"div-under-loginForm\">\r\n                    <label className=\"label\" htmlFor=\"emailField\">Email</label>\r\n                    <input type=\"email\" name=\"emailField\" id=\"emailField\"/>\r\n                    <label className=\"label\" htmlFor=\"passwordField\">Password</label>\r\n                    <input type=\"password\" name=\"passwordField\" id=\"passwordField\"/>\r\n                    <input onClick={() => handleLogin(app)} type=\"submit\" value=\"Login\" className=\"submitButton\"/>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default LoginForm;","import React, {Component} from 'react';\r\nimport './BasicInfo.css';\r\n\r\nconst handleSaveCustomer = () => {\r\n    const email = document.getElementById('basicInfoEmailField').value;\r\n    const name = document.getElementById('nameField').value;\r\n    const address = document.getElementById('addressField').value;\r\n    const city = document.getElementById('cityField').value;\r\n    const country = document.getElementById('countryField').value;\r\n\r\n    fetch('https://customerportalgb.herokuapp.com/customers', {\r\n        method: 'PUT',\r\n        headers: {\r\n            authorization: `Bearer ${localStorage.token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            name,\r\n            address,\r\n            city,\r\n            country\r\n        })\r\n    }).then(res => res.json())\r\n    .then(data=> {\r\n        if(data.name) {\r\n            window.location.reload();\r\n        } else {\r\n            alert('Ooops! Something went wrong. Try again!');\r\n        }\r\n    })\r\n}\r\n\r\nclass BasicInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const customer = props.app;\r\n        this.state = {\r\n            email: customer.email,\r\n            name: customer.name,\r\n            address: customer.address,\r\n            city: customer.city,\r\n            country: customer.country\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onAddressChange = (event) => {\r\n        this.setState({address: event.target.value})\r\n    }\r\n\r\n    onCityChange = (event) => {\r\n        this.setState({city: event.target.value})\r\n    }\r\n\r\n    onCountryChange = (event) => {\r\n        this.setState({country: event.target.value})\r\n    }\r\n    \r\n    render() {\r\n        const { email, name, address, city, country} = this.state;\r\n        return (\r\n            <div id=\"basicInfo\" className=\"white-bg\">\r\n                    <p>Basic Info</p>\r\n                <div className=\"div-under-basicInfo\">\r\n                    <label htmlFor=\"basicInfoEmailField\">Email</label>\r\n                    <input onChange={this.onEmailChange} type=\"email\" name=\"basicInfoEmailField\" id=\"basicInfoEmailField\" value={email}/>\r\n                    <label htmlFor=\"nameField\">Name</label>\r\n                    <input onChange={this.onNameChange} type=\"text\" name=\"nameField\" id=\"nameField\" value={name}/>\r\n                    <label htmlFor=\"addressField\">Address</label>\r\n                    <input onChange={this.onAddressChange} type=\"text\" name=\"addressField\" id=\"addressField\" value={address}/>\r\n                    <label htmlFor=\"cityField\">City</label>\r\n                    <input onChange={this.onCityChange} type=\"text\" name=\"cityField\" id=\"cityField\" value={city}/>\r\n                    <label htmlFor=\"countryField\">Country</label>\r\n                    <input onChange={this.onCountryChange} type=\"text\" name=\"countryField\" id=\"countryField\" value={country}/>\r\n                    <input onClick={handleSaveCustomer} type=\"submit\" value=\"Save\" className=\"saveButton\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BasicInfo;","import React from 'react';\r\n\r\nconst deletePassengerFromUI = (passengerRow) => {\r\n    passengerRow.parentNode.parentNode.parentNode.removeChild(passengerRow.parentNode.parentNode);\r\n}\r\n\r\nconst displayError = () => {\r\n    alert('Error deleting passenger!')\r\n}\r\n\r\nconst handleDeletePassenger = (event) => {\r\n    const passenger = event.target;\r\n    const passengerId = passenger.id.split(' ')[1];\r\n    \r\n    fetch('https://customerportalgb.herokuapp.com/passengers', {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: `Bearer ${localStorage.token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id: passengerId\r\n        })\r\n    }).then(res => res.json())\r\n    .then(data => data === 'Success' ? deletePassengerFromUI(passenger) : displayError())\r\n}\r\n\r\nconst Passenger = ({ id, title, firstName, surname, passportId }) => {\r\n\r\n    return (\r\n        <tr>\r\n            <td>{title}</td>\r\n            <td>{firstName}</td>\r\n            <td>{surname}</td>\r\n            <td>{passportId}</td>\r\n            <td><button onClick={handleDeletePassenger} id={`p ${id}`} className=\"deleteButton\">Delete</button></td>\r\n            <td className=\"lastCol\"></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Passenger;","import React from 'react';\r\nimport './PassengersList.css';\r\nimport Passenger from '../Passenger/Passenger';\r\n\r\nconst PassengersList = ({ passengersList, onAddPassengerClick }) => {\r\n    const passengersArray = passengersList.map(passenger =>{\r\n        return <Passenger key={passenger.passengerid} id={passenger.passengerid} title={passenger.title}\r\n                            firstName={passenger.firstname} surname={passenger.surname} passportId={passenger.passportid}/>\r\n    })\r\n\r\n    return (\r\n        <div id=\"passengers\" className=\"white-bg\">\r\n            <p>Passengers</p>\r\n            <table id=\"table-passengers\">\r\n                <tbody className=\"passengersTBody\">\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>First Name</th>\r\n                    <th>Surname</th>\r\n                    <th>Passport ID</th>\r\n                    <th>Options</th>\r\n                    <td className=\"lastCol\"></td>\r\n                </tr>\r\n                    {passengersArray}\r\n                </tbody>\r\n            </table>\r\n            <button onClick={onAddPassengerClick} className=\"addButton\">Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PassengersList;","import React from 'react';\r\n\r\nconst Trip = ({ id, departureAirport, destinationAirport, departureTime, arrivalTime, passengers }) => {\r\n\r\n    passengers = passengers.join(', ');\r\n    const deleteTripFromUI = (tripRow) => {\r\n        tripRow.parentNode.parentNode.parentNode.removeChild(tripRow.parentNode.parentNode);\r\n    }\r\n    \r\n    const displayError = () => {\r\n        alert('Error deleting trip!')\r\n    }\r\n    \r\n    const handleDeleteTrip = (event) => {\r\n        const trip = event.target;\r\n        const tripID = trip.id.split(' ')[1]; \r\n\r\n        fetch('https://customerportalgb.herokuapp.com/trips', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                trip_id: tripID\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => data === 'Success' ? deleteTripFromUI(trip) : displayError())\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{departureAirport}</td>\r\n            <td>{destinationAirport}</td>\r\n            <td>{departureTime}</td>\r\n            <td>{arrivalTime}</td>\r\n            <td>{passengers}</td>\r\n            <td><button onClick={handleDeleteTrip} id={`t ${id}`} className=\"deleteButton\">Delete</button></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Trip;","import React from 'react';\r\nimport './TripsList.css';\r\nimport Trip from '../Trip/Trip';\r\n\r\nconst TripsList = ({ tripsList, onAddTripClick }) => {\r\n    const tripsArray = tripsList.map(trip =>{\r\n        return <Trip key={trip.trip_id} id={trip.trip_id} departureAirport={trip.departure_airport}\r\n                            destinationAirport={trip.destination_airport} departureTime={trip.departure_time}\r\n                            arrivalTime={trip.arrival_time} passengers={trip.passengers}/>\r\n    })\r\n\r\n    return (\r\n        <div id=\"trips\" className=\"white-bg\">\r\n            <p>Trips</p>\r\n            <table id=\"table-trips\">\r\n                <tbody className=\"tripsTBody\">\r\n                <tr>\r\n                    <th>From</th>\r\n                    <th>To</th>\r\n                    <th>Departure</th>\r\n                    <th>Arrival</th>\r\n                    <th>Passengers</th>\r\n                    <th>Options</th>\r\n                </tr>\r\n                { tripsArray }\r\n                </tbody>\r\n            </table>\r\n            <button onClick={onAddTripClick} className=\"addButton\">Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TripsList;","import React from 'react';\r\n\r\nconst PassengerCheckBox = ({ title, firstName, surname, onPassengerCheck }) => {\r\n    const fullName = `${title}-${firstName}-${surname}`;\r\n\r\n    return(\r\n        <div>\r\n            <input onChange={onPassengerCheck} type=\"checkbox\" id={fullName} name={fullName}\r\n             value={`${title} ${firstName} ${surname}`} />{`${title} ${firstName} ${surname}`}<br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PassengerCheckBox;","import React, {Component} from 'react';\r\nimport './AddTrip.css';\r\nimport PassengerCheckBox from '../PassengerCheckBox/PassengerCheckBox';\r\n\r\nclass AddTrip extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            passengersList: []\r\n        }\r\n        this.passengersCheckBoxArray = props.passengersList.map(passenger =>{\r\n            return <PassengerCheckBox key={passenger.passengerid} title={passenger.title}\r\n            firstName={passenger.firstname} surname={passenger.surname} onPassengerCheck={this.onPassengerCheck}/>\r\n        })\r\n    }\r\n\r\n    onPassengerCheck = (event) => {\r\n        let passengersList = this.state.passengersList;\r\n        if(event.target.checked) {\r\n            passengersList.push(event.target.value)\r\n        } else {\r\n            passengersList.splice(passengersList.indexOf(event.target.value), 1)\r\n        }\r\n\r\n        this.setState({\r\n            passengersList\r\n        })\r\n    }\r\n\r\n    onDepartureAirportChange = (event) => {\r\n        this.setState({\r\n            departure_airport: event.target.value\r\n        })\r\n    }\r\n\r\n    onDestinationAirportChange = (event) => {\r\n        this.setState({\r\n            destination_airport: event.target.value\r\n        })\r\n    }\r\n\r\n    onDepartureDateChange = (event) => {\r\n        this.setState({\r\n            departureDate: event.target.value\r\n        })\r\n    }\r\n\r\n    onDepartureTimeChange = (event) => {\r\n        this.setState({\r\n            departureTime: event.target.value\r\n        })\r\n    }\r\n\r\n    onArrivalDateChange = (event) => {\r\n        this.setState({\r\n            arrivalDate: event.target.value\r\n        })\r\n    }\r\n\r\n    onArrivalTimeChange = (event) => {\r\n        this.setState({\r\n            arrivalTime: event.target.value\r\n        })\r\n    }\r\n\r\n    handleAddTrip = () => {\r\n        const { departure_airport, destination_airport, departureDate, departureTime, arrivalDate, arrivalTime, passengersList } = this.state;\r\n        const departure_time = `${departureDate} ${departureTime}`;\r\n        const arrival_time = `${arrivalDate} ${arrivalTime}`;\r\n        fetch('https://customerportalgb.herokuapp.com/trips', {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                departure_airport,\r\n                destination_airport,\r\n                departure_time,\r\n                arrival_time,\r\n                passengers: passengersList\r\n            })\r\n        }).then(res => res.json())\r\n        .then(newTrip => {\r\n            if(newTrip[0].passengers) {\r\n                window.location.reload()\r\n            } else {\r\n                alert('Unable to add the trip! Try again!')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"addTrip\">\r\n                <p className=\"add-trip-P\">Add trip</p>\r\n                <div className=\"div-under-addTrip\">\r\n                    <label htmlFor=\"departureAirport\">Departure airport</label>\r\n                    <input onChange={this.onDepartureAirportChange} type=\"text\" name=\"departureAirport\" id=\"departureAirport\" />\r\n                    <label htmlFor=\"destinationAirport\">Destination airport</label>\r\n                    <input onChange={this.onDestinationAirportChange} type=\"text\" name=\"destinationAirport\" id=\"destinationAirport\" />\r\n                    <label htmlFor=\"departureDate\">Departure date</label>\r\n                    <input onChange={this.onDepartureDateChange} type=\"date\" name=\"departureDate\" id=\"departureDate\" />\r\n                    <label htmlFor=\"departureTime\">Departure time</label>\r\n                    <input onChange={this.onDepartureTimeChange} type=\"time\" name=\"departureTime\" id=\"departureTime\" />\r\n                    <label htmlFor=\"arrivalDate\">Arrival date</label>\r\n                    <input onChange={this.onArrivalDateChange} type=\"date\" name=\"arrivalDate\" id=\"arrivalDate\" />\r\n                    <label htmlFor=\"arrivalTime\">Arrival time</label>\r\n                    <input onChange={this.onArrivalTimeChange} type=\"time\" name=\"arrivalTime\" id=\"arrivalTime\" />\r\n                </div>\r\n                <div className=\"passengers\">\r\n                    <label htmlFor=\"passengersCheckBoxList\">Passengers: </label>\r\n                    <div id=\"passengersCheckBoxList\">\r\n                        {this.passengersCheckBoxArray}\r\n                        <button onClick={this.handleAddTrip} className=\"saveButtonTrip\">Save</button>\r\n                    </div>\r\n                </div>\r\n                <button onClick={this.props.onCancelAddTripClick} className=\"cancelTripButton\">Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n        \r\nexport default AddTrip;","import React, {Component} from 'react';\r\nimport './AddPassenger.css';\r\n\r\nclass AddPassenger extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: 'Mr'\r\n        }\r\n    }\r\n\r\n    onTitleChange = (event) => {\r\n        this.setState({title: event.target.value});\r\n    }\r\n\r\n    onFirstNameChange = (event) => {\r\n        this.setState({firstname: event.target.value});\r\n    }\r\n\r\n    onSurnameChange = (event) => {\r\n        this.setState({surname: event.target.value});\r\n    }\r\n\r\n    onPassportIdChange = (event) => {\r\n        this.setState({passportid: event.target.value});\r\n    }\r\n\r\n    handleAddPassenger = () => {\r\n        const { title, firstname, surname, passportid } = this.state;\r\n        fetch('https://customerportalgb.herokuapp.com/passengers', {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                firstname,\r\n                surname,\r\n                passportid\r\n            })\r\n        }).then(res => res.json())\r\n        .then(newPassenger => {\r\n            if(newPassenger[0].title) {\r\n                window.location.reload()\r\n            } else {\r\n                alert('Unable to add the passenger! Check the data and try again!')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"addPassenger\">\r\n                <p className=\"add-Passenger-P\">Add passenger</p>\r\n                <div className=\"div-under-addPassenger\">\r\n                    <label htmlFor=\"titleSelect\">Title</label>\r\n                    <select onChange={this.onTitleChange} name=\"titleSelect\" id=\"titleSelect\">\r\n                        <option value=\"Mr\">Mr</option>\r\n                        <option value=\"Mrs\">Mrs</option>\r\n                        <option value=\"Miss\">Miss</option>\r\n                        <option value=\"Ms\">Ms</option>\r\n                    </select>\r\n                    <label htmlFor=\"firstNameField\">Firstname</label>\r\n                    <input onChange={this.onFirstNameChange} type=\"text\" name=\"firstNameField\" id=\"firstNameField\"/>\r\n                    <label htmlFor=\"surnameField\">Surname</label>\r\n                    <input onChange={this.onSurnameChange} type=\"text\" name=\"surnameField\" id=\"surnameField\"/>\r\n                    <label htmlFor=\"passportID\">Passport ID</label>\r\n                    <input onChange={this.onPassportIdChange} type=\"text\" name=\"passportID\" id=\"passportID\"/>\r\n                    <button onClick={this.handleAddPassenger} className=\"addPassengerButton\">Add</button>\r\n                </div>\r\n                <button onClick={this.props.onCancelAddPassengerClick} className=\"cancelButton\">Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPassenger;","import React from 'react';\r\nimport './CustomerDetailsPage.css';\r\nimport BasicInfo from '../BasicInfo/BasicInfo';\r\nimport PassengersList from '../PassengersList/PassengersList';\r\nimport TripsList from '../TripsList/TripsList';\r\nimport AddTrip from '../AddTrip/AddTrip';\r\nimport AddPassenger from '../AddPassenger/AddPassenger';\r\n\r\nconst CustomerDetailsPage = ({ app }) => {\r\n\r\n    return (\r\n        <div id=\"customerDetailsPage\">\r\n            <BasicInfo app={app.state.customer} />\r\n            <PassengersList passengersList={app.state.passengers}\r\n                            onAddPassengerClick={app.onAddPassengerClick}/>\r\n            { app.state.addPassengerWindow ? <AddPassenger onCancelAddPassengerClick={app.onCancelAddPassengerClick}/> : null }\r\n            <TripsList tripsList={app.state.trips}\r\n                       onAddTripClick={app.onAddTripClick}/>\r\n            { app.state.addTripWindow ? <AddTrip passengersList={app.state.passengers} onCancelAddTripClick={app.onCancelAddTripClick}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerDetailsPage;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from '../components/Header/Header';\r\nimport LoginForm from '../components/LoginForm/LoginForm';\r\nimport CustomerDetailsPage from '../components/CustomerDetailsPage/CustomerDetailsPage';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      \r\n    }\r\n    fetch('https://customerportalgb.herokuapp.com');\r\n  }\r\n\r\n  onAddPassengerClick = () => {\r\n    this.setState({\r\n      addPassengerWindow: true\r\n    })\r\n  }\r\n\r\n  onCancelAddPassengerClick = () => {\r\n    this.setState({\r\n      addPassengerWindow: false\r\n    })\r\n  }\r\n\r\n  onAddTripClick = () => {\r\n    this.setState({\r\n      addTripWindow: true\r\n    })\r\n  }\r\n\r\n  onCancelAddTripClick = () => {\r\n    this.setState({\r\n      addTripWindow: false\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if(localStorage.token) {\r\n      const auth = `Bearer ${localStorage.token}`;\r\n      fetch('https://customerportalgb.herokuapp.com/auth', {\r\n        headers: {\r\n          authorization: auth\r\n        }\r\n      }).then(res => res.json())\r\n      .then(data => this.setState(data))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        {localStorage.token ? null : <LoginForm app = {this} />}\r\n        {this.state.customer ? <CustomerDetailsPage app = {this} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}